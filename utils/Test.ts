import { GasPriceOracle } from "./GasPriceOracle";
import { RLP } from "./RLP";

const l1FeeConfig = {
  baseFee: 260606259n,
  blobBaseFee: 1n,
  baseFeeScalar: 2269n,
  blobBaseFeeScalar: 1055762n,
};

const oracle = new GasPriceOracle(l1FeeConfig);

const unsignedRLP = RLP.encodeTransaction({
  to: "0x888888888889758F76e7103c6CbF23ABbF58F946",
  value: 0,
  data: "0x60fc846600000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000003a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002e405eb5327000000000000000000000000000000b1cf3c8df89d748dcbea3c970e1bcf4039000000000000000000000000d7c3cece4bd8ff41ade50d59ece7bc91dc2545c100000000000000000000000000000000000000000000002ac6305d7258f6c9da00000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000001e0000000000000000000000000e31ee12bdfdd0573d634124611e85338e2cbf0cf00000000000000000000000000000000000000000000000034e347e00bfeb4af000000000000000000000000e31ee12bdfdd0573d634124611e85338e2cbf0cf000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000aa000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000001c40741a80300000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000180000000000000000000000000d4f480965d2347d421f1bec7f545682e5ec2151d00000000000000000000000000000000000000000000000000000000000001a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000018839da000e86b3a55fe3f0e32cfe6ef23e8409600000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e31ee12bdfdd0573d634124611e85338e2cbf0cf0000000000000000000000000000000000000000000000002693cd8dcbc8af130000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
  type: 2,
  gasLimit: 1132006,
  nonce: 58,
  chainId: 8453,
});

console.log(unsignedRLP);

const gasUsed = oracle.getL1GasUsed(unsignedRLP);
console.log(gasUsed);
const gasFee = oracle.getL1Fee(unsignedRLP);
console.log(gasFee);
